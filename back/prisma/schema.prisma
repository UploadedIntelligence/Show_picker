// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  username     String?
  password     String
  watchList    WatchList[]
  groupsMember Group[]     @relation("GroupMembers")
  groupsOwned  Group[]     @relation("GroupOwner")
  ratings      Rating[]
}

model Group {
  id          Int        @id @unique @default(autoincrement())
  watchList   WatchList?
  owner       User       @relation("GroupOwner", fields: [ownerId], references: [id])
  ownerId     Int
  groupMember User[]     @relation("GroupMembers")
}

model Show {
  id         Int               @id @default(autoincrement())
  name       String
  year       String
  actors     String
  imageUrl   String
  watchLists ShowOnWatchList[]
  Ratings    Rating[]
}

model Rating {
  show   Show @relation(fields: [showId], references: [id])
  showId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int
  rating Int

  @@unique([showId, userId])
}

model WatchList {
  id      Int               @id @unique @default(autoincrement())
  name    String
  shows   ShowOnWatchList[]
  user    User?             @relation(fields: [userId], references: [id])
  userId  Int?
  group   Group?            @relation(fields: [groupId], references: [id])
  groupId Int?              @unique
}

model ShowOnWatchList {
  watchList   WatchList @relation(fields: [watchListId], references: [id])
  watchListId Int
  show        Show      @relation(fields: [showId], references: [id])
  showId      Int
  added       DateTime  @default(now())

  @@unique([watchListId, showId])
}
